{"filter":false,"title":"README.rdoc","tooltip":"/command/README.rdoc","undoManager":{"mark":18,"position":18,"stack":[[{"start":{"row":0,"column":0},"end":{"row":35,"column":0},"action":"insert","lines":["= Template Method Pattern","","This documentation was developed as part of a programming","activity for the <em>Software Design and Architecture</em>","course (_Tc3049_), at the Tecnológico de Monterrey, Campus","Estado de México.","","== Authors","","* *A01378916* <em>Rafael Moreno Cañas</em>","* *A01379896* <em>Erick Bautista Pérez</em>","","== Overview","","The <b>template Method</b> is a behavioral design pattern that defines the skeleton of ","an algorithm in the superclass but lets subclasses override specific steps ","of the algorithm without changing its structure.","","The UML diagram for this programming activity is as follows:","","rdoc-image:img/template_uml.png","","To test the program, inside the +src+ folder type the following","instruction at the command line:","","            ruby -I . -w table_generator_test.rb","","==References","","- \\Template Method. (2020). Retrieved 21 February 2020, ","from https://refactoring.guru/design-patterns/template-method","","","- \\R. Olsen. <em>Design Patterns in Ruby.</em> Addison-Wesley,","2007.",""],"id":1}],[{"start":{"row":0,"column":10},"end":{"row":0,"column":17},"action":"remove","lines":[" Method"],"id":2},{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"insert","lines":["C"]},{"start":{"row":0,"column":11},"end":{"row":0,"column":12},"action":"insert","lines":["o"]},{"start":{"row":0,"column":12},"end":{"row":0,"column":13},"action":"insert","lines":["m"]},{"start":{"row":0,"column":13},"end":{"row":0,"column":14},"action":"insert","lines":["m"]},{"start":{"row":0,"column":14},"end":{"row":0,"column":15},"action":"insert","lines":["a"]},{"start":{"row":0,"column":15},"end":{"row":0,"column":16},"action":"insert","lines":["n"]},{"start":{"row":0,"column":16},"end":{"row":0,"column":17},"action":"insert","lines":["d"]}],[{"start":{"row":14,"column":7},"end":{"row":14,"column":22},"action":"remove","lines":["template Method"],"id":3},{"start":{"row":14,"column":7},"end":{"row":14,"column":8},"action":"insert","lines":["c"]},{"start":{"row":14,"column":8},"end":{"row":14,"column":9},"action":"insert","lines":["o"]},{"start":{"row":14,"column":9},"end":{"row":14,"column":10},"action":"insert","lines":["m"]},{"start":{"row":14,"column":10},"end":{"row":14,"column":11},"action":"insert","lines":["m"]},{"start":{"row":14,"column":11},"end":{"row":14,"column":12},"action":"insert","lines":["a"]},{"start":{"row":14,"column":12},"end":{"row":14,"column":13},"action":"insert","lines":["n"]},{"start":{"row":14,"column":13},"end":{"row":14,"column":14},"action":"insert","lines":["d"]}],[{"start":{"row":14,"column":14},"end":{"row":14,"column":15},"action":"insert","lines":[" "],"id":4}],[{"start":{"row":14,"column":7},"end":{"row":14,"column":8},"action":"remove","lines":["c"],"id":5}],[{"start":{"row":14,"column":7},"end":{"row":14,"column":8},"action":"insert","lines":["C"],"id":6}],[{"start":{"row":14,"column":15},"end":{"row":14,"column":16},"action":"insert","lines":["P"],"id":7},{"start":{"row":14,"column":16},"end":{"row":14,"column":17},"action":"insert","lines":["a"]},{"start":{"row":14,"column":17},"end":{"row":14,"column":18},"action":"insert","lines":["t"]},{"start":{"row":14,"column":18},"end":{"row":14,"column":19},"action":"insert","lines":["t"]},{"start":{"row":14,"column":19},"end":{"row":14,"column":20},"action":"insert","lines":["e"]},{"start":{"row":14,"column":20},"end":{"row":14,"column":21},"action":"insert","lines":["r"]},{"start":{"row":14,"column":21},"end":{"row":14,"column":22},"action":"insert","lines":["n"]}],[{"start":{"row":14,"column":27},"end":{"row":16,"column":48},"action":"remove","lines":["is a behavioral design pattern that defines the skeleton of ","an algorithm in the superclass but lets subclasses override specific steps ","of the algorithm without changing its structure."],"id":8},{"start":{"row":14,"column":27},"end":{"row":14,"column":129},"action":"insert","lines":["is a behavior design pattern used to store the information necessary to call methods at a future time."]}],[{"start":{"row":14,"column":129},"end":{"row":15,"column":0},"action":"insert","lines":["",""],"id":9}],[{"start":{"row":15,"column":0},"end":{"row":15,"column":135},"action":"insert","lines":["The Command pattern allows requests to be encapsulated as objects, thereby allowing clients to be parametrized with different requests."],"id":10}],[{"start":{"row":19,"column":15},"end":{"row":19,"column":23},"action":"remove","lines":["template"],"id":11},{"start":{"row":19,"column":15},"end":{"row":19,"column":16},"action":"insert","lines":["c"]},{"start":{"row":19,"column":16},"end":{"row":19,"column":17},"action":"insert","lines":["o"]},{"start":{"row":19,"column":17},"end":{"row":19,"column":18},"action":"insert","lines":["m"]},{"start":{"row":19,"column":18},"end":{"row":19,"column":19},"action":"insert","lines":["m"]},{"start":{"row":19,"column":19},"end":{"row":19,"column":20},"action":"insert","lines":["a"]},{"start":{"row":19,"column":20},"end":{"row":19,"column":21},"action":"insert","lines":["n"]}],[{"start":{"row":19,"column":21},"end":{"row":19,"column":22},"action":"insert","lines":["d"],"id":12}],[{"start":{"row":28,"column":2},"end":{"row":29,"column":61},"action":"remove","lines":["\\Template Method. (2020). Retrieved 21 February 2020, ","from https://refactoring.guru/design-patterns/template-method"],"id":13},{"start":{"row":28,"column":2},"end":{"row":28,"column":155},"action":"insert","lines":["Ruby Design Pattern: Command Method. (2020). Retrieved 29 March 2020, from https://medium.com/@nakshtra17/ruby-design-pattern-command-method-3d1e3f41d39d"]}],[{"start":{"row":28,"column":2},"end":{"row":28,"column":3},"action":"insert","lines":["\\"],"id":14}],[{"start":{"row":28,"column":73},"end":{"row":29,"column":0},"action":"insert","lines":["",""],"id":15}],[{"start":{"row":24,"column":25},"end":{"row":24,"column":39},"action":"remove","lines":["table_generato"],"id":16},{"start":{"row":24,"column":25},"end":{"row":24,"column":26},"action":"insert","lines":["c"]},{"start":{"row":24,"column":26},"end":{"row":24,"column":27},"action":"insert","lines":["o"]},{"start":{"row":24,"column":27},"end":{"row":24,"column":28},"action":"insert","lines":["n"]},{"start":{"row":24,"column":28},"end":{"row":24,"column":29},"action":"insert","lines":["t"]},{"start":{"row":24,"column":29},"end":{"row":24,"column":30},"action":"insert","lines":["r"]}],[{"start":{"row":24,"column":30},"end":{"row":24,"column":31},"action":"insert","lines":["o"],"id":17},{"start":{"row":24,"column":31},"end":{"row":24,"column":32},"action":"insert","lines":["l"]}],[{"start":{"row":24,"column":32},"end":{"row":24,"column":33},"action":"remove","lines":["r"],"id":18}],[{"start":{"row":19,"column":15},"end":{"row":19,"column":30},"action":"remove","lines":["command_uml.png"],"id":19},{"start":{"row":19,"column":15},"end":{"row":19,"column":30},"action":"insert","lines":["command_uml.jpg"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":19,"column":30},"end":{"row":19,"column":30},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1585524128176,"hash":"09c6b8e83b28099073f59bd3df97e237ec1a5a44"}