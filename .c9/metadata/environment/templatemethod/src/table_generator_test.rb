{"filter":false,"title":"table_generator_test.rb","tooltip":"/templatemethod/src/table_generator_test.rb","ace":{"folds":[],"scrolltop":520.800048828125,"scrollleft":0,"selection":{"start":{"row":22,"column":41},"end":{"row":22,"column":41},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"hash":"c651aa65f87034392250a608f5e5748cfed3bddf","undoManager":{"mark":25,"position":25,"stack":[[{"start":{"row":102,"column":0},"end":{"row":128,"column":5},"action":"remove","lines":["  def test_AsciiDocTableGenerator","    assert_equal \\","      \"[options=\\\"header\\\"]\\n\" +","      \"|==========\\n\" +","      \"|Snap|Crackle|Pop\\n\" +","      \"|10|20|30\\n\" +","      \"|12|64|13\\n\" +","      \"|34|11|29\\n\" +","      \"|99|15|34\\n\" +","      \"|==========\\n\",","      AsciiDocTableGenerator.new(@headerNums,","                                 @dataNums).generate","    assert_equal \\","      \"[options=\\\"header\\\"]\\n\" +","      \"|==========\\n\" +","      \"|id|name|grade1|grade2|grade3|average\\n\" +","      \"|123|Selma Bouvier|71|84|89|81\\n\" +","      \"|241|Carl Carlson|78|85|90|84\\n\" +","      \"|299|Todd Flanders|67|71|77|71\\n\" +","      \"|311|Barney Gumble|24|18|35|25\\n\" +","      \"|427|Edna Krabappel|92|95|99|95\\n\" +","      \"|666|Damien Thorn|66|66|66|66\\n\" +","      \"|718|Manjula Nahasapeemapetilon|53|72|88|71\\n\" +","      \"|==========\\n\",","      AsciiDocTableGenerator.new(@headerStudents,","                                 @dataStudents).generate","  end"],"id":2}],[{"start":{"row":100,"column":5},"end":{"row":101,"column":0},"action":"insert","lines":["",""],"id":3},{"start":{"row":101,"column":0},"end":{"row":101,"column":2},"action":"insert","lines":["  "]},{"start":{"row":101,"column":2},"end":{"row":102,"column":0},"action":"insert","lines":["",""]},{"start":{"row":102,"column":0},"end":{"row":102,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":102,"column":2},"end":{"row":128,"column":5},"action":"insert","lines":["def test_AsciiDocTableGenerator","    assert_equal \\","      \"[options=\\\"header\\\"]\\n\" +","      \"|==========\\n\" +","      \"|Snap|Crackle|Pop\\n\" +","      \"|10|20|30\\n\" +","      \"|12|64|13\\n\" +","      \"|34|11|29\\n\" +","      \"|99|15|34\\n\" +","      \"|==========\\n\",","      AsciiDocTableGenerator.new(@headerNums,","                                 @dataNums).generate","    assert_equal \\","      \"[options=\\\"header\\\"]\\n\" +","      \"|==========\\n\" +","      \"|id|name|grade1|grade2|grade3|average\\n\" +","      \"|123|Selma Bouvier|71|84|89|81\\n\" +","      \"|241|Carl Carlson|78|85|90|84\\n\" +","      \"|299|Todd Flanders|67|71|77|71\\n\" +","      \"|311|Barney Gumble|24|18|35|25\\n\" +","      \"|427|Edna Krabappel|92|95|99|95\\n\" +","      \"|666|Damien Thorn|66|66|66|66\\n\" +","      \"|718|Manjula Nahasapeemapetilon|53|72|88|71\\n\" +","      \"|==========\\n\",","      AsciiDocTableGenerator.new(@headerStudents,","                                 @dataStudents).generate","  end"],"id":4}],[{"start":{"row":130,"column":0},"end":{"row":131,"column":0},"action":"remove","lines":["",""],"id":5}],[{"start":{"row":12,"column":0},"end":{"row":131,"column":3},"action":"remove","lines":["class TableGeneratorTest < Minitest::Test","","  def setup","    @headerEmpty = []","    @dataEmpty = []","","    @headerNums = %w{Snap Crackle Pop}","    @dataNums = [[10, 20, 30],","                 [12, 64, 13],","                 [34, 11, 29],","                 [99, 15, 34]]","","    @headerStudents = %w{id name grade1 grade2 grade3 average}","    @dataStudents = [Student.new(123,","                                 \"Selma Bouvier\",","                                 [71, 84, 89]),","                     Student.new(241,","                                 \"Carl Carlson\",","                                 [78, 85, 90]),","                     Student.new(299,","                                 \"Todd Flanders\",","                                 [67, 71, 77]),","                     Student.new(311,","                                 \"Barney Gumble\",","                                 [24, 18, 35]),","                     Student.new(427,","                                 \"Edna Krabappel\",","                                 [92, 95, 99]),","                     Student.new(666,","                                 \"Damien Thorn\",","                                 [66, 66, 66]),","                     Student.new(718,","                                 \"Manjula Nahasapeemapetilon\",","                                 [53, 72, 88])]","  end","","  def test_CSVTableGenerator","    assert_equal \\","      \"Snap,Crackle,Pop\\n\" +","      \"10,20,30\\n\" +","      \"12,64,13\\n\" +","      \"34,11,29\\n\" +","      \"99,15,34\\n\",","      CSVTableGenerator.new(@headerNums, @dataNums).generate","    assert_equal \\","      \"id,name,grade1,grade2,grade3,average\\n\" +","      \"123,Selma Bouvier,71,84,89,81\\n\" +","      \"241,Carl Carlson,78,85,90,84\\n\" +","      \"299,Todd Flanders,67,71,77,71\\n\" +","      \"311,Barney Gumble,24,18,35,25\\n\" +","      \"427,Edna Krabappel,92,95,99,95\\n\" +","      \"666,Damien Thorn,66,66,66,66\\n\" +","      \"718,Manjula Nahasapeemapetilon,53,72,88,71\\n\",","      CSVTableGenerator.new(@headerStudents,","                            @dataStudents).generate","  end","","  def test_HTMLTableGenerator","    assert_equal \\","      \"<table>\\n\" +","      \"<tr><th>Snap</th><th>Crackle</th><th>Pop</th></tr>\\n\" +","      \"<tr><td>10</td><td>20</td><td>30</td></tr>\\n\" +","      \"<tr><td>12</td><td>64</td><td>13</td></tr>\\n\" +","      \"<tr><td>34</td><td>11</td><td>29</td></tr>\\n\" +","      \"<tr><td>99</td><td>15</td><td>34</td></tr>\\n\" +","      \"</table>\\n\",","      HTMLTableGenerator.new(@headerNums, @dataNums).generate","    assert_equal \\","      \"<table>\\n\" +","      \"<tr><th>id</th><th>name</th><th>grade1</th>\" +","      \"<th>grade2</th><th>grade3</th><th>average</th></tr>\\n\" +","      \"<tr><td>123</td><td>Selma Bouvier</td><td>71</td>\" +","      \"<td>84</td><td>89</td><td>81</td></tr>\\n\" +","      \"<tr><td>241</td><td>Carl Carlson</td><td>78</td>\" +","      \"<td>85</td><td>90</td><td>84</td></tr>\\n\" +","      \"<tr><td>299</td><td>Todd Flanders</td><td>67</td>\" +","      \"<td>71</td><td>77</td><td>71</td></tr>\\n\" +","      \"<tr><td>311</td><td>Barney Gumble</td><td>24</td>\" +","      \"<td>18</td><td>35</td><td>25</td></tr>\\n\" +","      \"<tr><td>427</td><td>Edna Krabappel</td><td>92</td>\" +","      \"<td>95</td><td>99</td><td>95</td></tr>\\n\" +","      \"<tr><td>666</td><td>Damien Thorn</td><td>66</td>\" +","      \"<td>66</td><td>66</td><td>66</td></tr>\\n\" +","      \"<tr><td>718</td><td>Manjula Nahasapeemapetilon</td>\" +","      \"<td>53</td><td>72</td><td>88</td><td>71</td></tr>\\n\" +","      \"</table>\\n\",","      HTMLTableGenerator.new(@headerStudents,","                             @dataStudents).generate","  end","  ","  def test_AsciiDocTableGenerator","    assert_equal \\","      \"[options=\\\"header\\\"]\\n\" +","      \"|==========\\n\" +","      \"|Snap|Crackle|Pop\\n\" +","      \"|10|20|30\\n\" +","      \"|12|64|13\\n\" +","      \"|34|11|29\\n\" +","      \"|99|15|34\\n\" +","      \"|==========\\n\",","      AsciiDocTableGenerator.new(@headerNums,","                                 @dataNums).generate","    assert_equal \\","      \"[options=\\\"header\\\"]\\n\" +","      \"|==========\\n\" +","      \"|id|name|grade1|grade2|grade3|average\\n\" +","      \"|123|Selma Bouvier|71|84|89|81\\n\" +","      \"|241|Carl Carlson|78|85|90|84\\n\" +","      \"|299|Todd Flanders|67|71|77|71\\n\" +","      \"|311|Barney Gumble|24|18|35|25\\n\" +","      \"|427|Edna Krabappel|92|95|99|95\\n\" +","      \"|666|Damien Thorn|66|66|66|66\\n\" +","      \"|718|Manjula Nahasapeemapetilon|53|72|88|71\\n\" +","      \"|==========\\n\",","      AsciiDocTableGenerator.new(@headerStudents,","                                 @dataStudents).generate","  end","","","end"],"id":6}],[{"start":{"row":12,"column":0},"end":{"row":134,"column":3},"action":"insert","lines":["require 'minitest/autorun'","require 'table_generator'","require 'student'","","class TableGeneratorTest < Minitest::Test","","  def setup","    @headerEmpty = []","    @dataEmpty = []","","    @headerNums = %w{Snap Crackle Pop}","    @dataNums = [[10, 20, 30],","                 [12, 64, 13],","                 [34, 11, 29],","                 [99, 15, 34]]","","    @headerStudents = %w{id name grade1 grade2 grade3 average}","    @dataStudents = [Student.new(123,","                                 \"Selma Bouvier\",","                                 [71, 84, 89]),","                     Student.new(241,","                                 \"Carl Carlson\",","                                 [78, 85, 90]),","                     Student.new(299,","                                 \"Todd Flanders\",","                                 [67, 71, 77]),","                     Student.new(311,","                                 \"Barney Gumble\",","                                 [24, 18, 35]),","                     Student.new(427,","                                 \"Edna Krabappel\",","                                 [92, 95, 99]),","                     Student.new(666,","                                 \"Damien Thorn\",","                                 [66, 66, 66]),","                     Student.new(718,","                                 \"Manjula Nahasapeemapetilon\",","                                 [53, 72, 88])]","  end","","  def test_CSVTableGenerator","    assert_equal \\","      \"Snap,Crackle,Pop\\n\" +","      \"10,20,30\\n\" +","      \"12,64,13\\n\" +","      \"34,11,29\\n\" +","      \"99,15,34\\n\",","      CSVTableGenerator.new(@headerNums, @dataNums).generate","    assert_equal \\","      \"id,name,grade1,grade2,grade3,average\\n\" +","      \"123,Selma Bouvier,71,84,89,81\\n\" +","      \"241,Carl Carlson,78,85,90,84\\n\" +","      \"299,Todd Flanders,67,71,77,71\\n\" +","      \"311,Barney Gumble,24,18,35,25\\n\" +","      \"427,Edna Krabappel,92,95,99,95\\n\" +","      \"666,Damien Thorn,66,66,66,66\\n\" +","      \"718,Manjula Nahasapeemapetilon,53,72,88,71\\n\",","      CSVTableGenerator.new(@headerStudents,","                            @dataStudents).generate","  end","","  def test_HTMLTableGenerator","    assert_equal \\","      \"<table>\\n\" +","      \"<tr><th>Snap</th><th>Crackle</th><th>Pop</th></tr>\\n\" +","      \"<tr><td>10</td><td>20</td><td>30</td></tr>\\n\" +","      \"<tr><td>12</td><td>64</td><td>13</td></tr>\\n\" +","      \"<tr><td>34</td><td>11</td><td>29</td></tr>\\n\" +","      \"<tr><td>99</td><td>15</td><td>34</td></tr>\\n\" +","      \"</table>\\n\",","      HTMLTableGenerator.new(@headerNums, @dataNums).generate","    assert_equal \\","      \"<table>\\n\" +","      \"<tr><th>id</th><th>name</th><th>grade1</th>\" +","      \"<th>grade2</th><th>grade3</th><th>average</th></tr>\\n\" +","      \"<tr><td>123</td><td>Selma Bouvier</td><td>71</td>\" +","      \"<td>84</td><td>89</td><td>81</td></tr>\\n\" +","      \"<tr><td>241</td><td>Carl Carlson</td><td>78</td>\" +","      \"<td>85</td><td>90</td><td>84</td></tr>\\n\" +","      \"<tr><td>299</td><td>Todd Flanders</td><td>67</td>\" +","      \"<td>71</td><td>77</td><td>71</td></tr>\\n\" +","      \"<tr><td>311</td><td>Barney Gumble</td><td>24</td>\" +","      \"<td>18</td><td>35</td><td>25</td></tr>\\n\" +","      \"<tr><td>427</td><td>Edna Krabappel</td><td>92</td>\" +","      \"<td>95</td><td>99</td><td>95</td></tr>\\n\" +","      \"<tr><td>666</td><td>Damien Thorn</td><td>66</td>\" +","      \"<td>66</td><td>66</td><td>66</td></tr>\\n\" +","      \"<tr><td>718</td><td>Manjula Nahasapeemapetilon</td>\" +","      \"<td>53</td><td>72</td><td>88</td><td>71</td></tr>\\n\" +","      \"</table>\\n\",","      HTMLTableGenerator.new(@headerStudents,","                             @dataStudents).generate","  end","","  def test_AsciiDocTableGenerator","    assert_equal \\","      \"[options=\\\"header\\\"]\\n\" +","      \"|==========\\n\" +","      \"|Snap|Crackle|Pop\\n\" +","      \"|10|20|30\\n\" +","      \"|12|64|13\\n\" +","      \"|34|11|29\\n\" +","      \"|99|15|34\\n\" +","      \"|==========\\n\",","      AsciiDocTableGenerator.new(@headerNums,","                                 @dataNums).generate","    assert_equal \\","      \"[options=\\\"header\\\"]\\n\" +","      \"|==========\\n\" +","      \"|id|name|grade1|grade2|grade3|average\\n\" +","      \"|123|Selma Bouvier|71|84|89|81\\n\" +","      \"|241|Carl Carlson|78|85|90|84\\n\" +","      \"|299|Todd Flanders|67|71|77|71\\n\" +","      \"|311|Barney Gumble|24|18|35|25\\n\" +","      \"|427|Edna Krabappel|92|95|99|95\\n\" +","      \"|666|Damien Thorn|66|66|66|66\\n\" +","      \"|718|Manjula Nahasapeemapetilon|53|72|88|71\\n\" +","      \"|==========\\n\",","      AsciiDocTableGenerator.new(@headerStudents,","                                 @dataStudents).generate","  end","","end"],"id":7}],[{"start":{"row":6,"column":36},"end":{"row":7,"column":0},"action":"insert","lines":["",""],"id":8},{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":8,"column":0},"end":{"row":9,"column":42},"action":"insert","lines":["# The source code contained in this file demonstrates how to","# implement the <em>template pattern</em>."],"id":9}],[{"start":{"row":18,"column":0},"end":{"row":19,"column":0},"action":"insert","lines":["",""],"id":10}],[{"start":{"row":19,"column":0},"end":{"row":19,"column":43},"action":"insert","lines":["# Unit tests for the table_generator class."],"id":11}],[{"start":{"row":55,"column":0},"end":{"row":56,"column":0},"action":"insert","lines":["",""],"id":12}],[{"start":{"row":56,"column":0},"end":{"row":56,"column":68},"action":"insert","lines":["# Checks that the +test_CSVTableGenerator+ method works as expected."],"id":13}],[{"start":{"row":77,"column":0},"end":{"row":77,"column":69},"action":"insert","lines":["# Checks that the +test_HTMLTableGenerator+ method works as expected."],"id":14}],[{"start":{"row":76,"column":5},"end":{"row":77,"column":0},"action":"insert","lines":["",""],"id":15},{"start":{"row":77,"column":0},"end":{"row":77,"column":2},"action":"insert","lines":["  "]}],[{"start":{"row":111,"column":0},"end":{"row":112,"column":0},"action":"insert","lines":["",""],"id":16}],[{"start":{"row":112,"column":0},"end":{"row":112,"column":72},"action":"insert","lines":["  # Checks that the +test_AsciiTableGenerator+ method works as expected."],"id":17}],[{"start":{"row":21,"column":0},"end":{"row":21,"column":2},"action":"insert","lines":["  "],"id":18}],[{"start":{"row":21,"column":0},"end":{"row":21,"column":2},"action":"remove","lines":["  "],"id":19}],[{"start":{"row":21,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["",""],"id":20},{"start":{"row":22,"column":0},"end":{"row":22,"column":1},"action":"insert","lines":["#"]}],[{"start":{"row":22,"column":1},"end":{"row":22,"column":2},"action":"insert","lines":["M"],"id":21},{"start":{"row":22,"column":2},"end":{"row":22,"column":3},"action":"insert","lines":["e"]},{"start":{"row":22,"column":3},"end":{"row":22,"column":4},"action":"insert","lines":["t"]},{"start":{"row":22,"column":4},"end":{"row":22,"column":5},"action":"insert","lines":["h"]},{"start":{"row":22,"column":5},"end":{"row":22,"column":6},"action":"insert","lines":["o"]},{"start":{"row":22,"column":6},"end":{"row":22,"column":7},"action":"insert","lines":["d"]}],[{"start":{"row":22,"column":7},"end":{"row":22,"column":8},"action":"insert","lines":[" "],"id":22},{"start":{"row":22,"column":8},"end":{"row":22,"column":9},"action":"insert","lines":["t"]},{"start":{"row":22,"column":9},"end":{"row":22,"column":10},"action":"insert","lines":["h"]},{"start":{"row":22,"column":10},"end":{"row":22,"column":11},"action":"insert","lines":["a"]},{"start":{"row":22,"column":11},"end":{"row":22,"column":12},"action":"insert","lines":["t"]}],[{"start":{"row":22,"column":12},"end":{"row":22,"column":13},"action":"insert","lines":[" "],"id":23},{"start":{"row":22,"column":13},"end":{"row":22,"column":14},"action":"insert","lines":["c"]},{"start":{"row":22,"column":14},"end":{"row":22,"column":15},"action":"insert","lines":["o"]},{"start":{"row":22,"column":15},"end":{"row":22,"column":16},"action":"insert","lines":["l"]},{"start":{"row":22,"column":16},"end":{"row":22,"column":17},"action":"insert","lines":["l"]},{"start":{"row":22,"column":17},"end":{"row":22,"column":18},"action":"insert","lines":["e"]},{"start":{"row":22,"column":18},"end":{"row":22,"column":19},"action":"insert","lines":["c"]},{"start":{"row":22,"column":19},"end":{"row":22,"column":20},"action":"insert","lines":["t"]}],[{"start":{"row":22,"column":20},"end":{"row":22,"column":21},"action":"insert","lines":[" "],"id":24},{"start":{"row":22,"column":21},"end":{"row":22,"column":22},"action":"insert","lines":["d"]},{"start":{"row":22,"column":22},"end":{"row":22,"column":23},"action":"insert","lines":["a"]},{"start":{"row":22,"column":23},"end":{"row":22,"column":24},"action":"insert","lines":["t"]},{"start":{"row":22,"column":24},"end":{"row":22,"column":25},"action":"insert","lines":["a"]}],[{"start":{"row":22,"column":25},"end":{"row":22,"column":26},"action":"insert","lines":[" "],"id":25},{"start":{"row":22,"column":26},"end":{"row":22,"column":27},"action":"insert","lines":["f"]},{"start":{"row":22,"column":27},"end":{"row":22,"column":28},"action":"insert","lines":["o"]},{"start":{"row":22,"column":28},"end":{"row":22,"column":29},"action":"insert","lines":["r"]}],[{"start":{"row":22,"column":29},"end":{"row":22,"column":30},"action":"insert","lines":[" "],"id":26},{"start":{"row":22,"column":30},"end":{"row":22,"column":31},"action":"insert","lines":["t"]},{"start":{"row":22,"column":31},"end":{"row":22,"column":32},"action":"insert","lines":["h"]},{"start":{"row":22,"column":32},"end":{"row":22,"column":33},"action":"insert","lines":["e"]}],[{"start":{"row":22,"column":33},"end":{"row":22,"column":34},"action":"insert","lines":[" "],"id":27},{"start":{"row":22,"column":34},"end":{"row":22,"column":35},"action":"insert","lines":["t"]},{"start":{"row":22,"column":35},"end":{"row":22,"column":36},"action":"insert","lines":["e"]},{"start":{"row":22,"column":36},"end":{"row":22,"column":37},"action":"insert","lines":["s"]},{"start":{"row":22,"column":37},"end":{"row":22,"column":38},"action":"insert","lines":["t"]},{"start":{"row":22,"column":38},"end":{"row":22,"column":39},"action":"insert","lines":["i"]},{"start":{"row":22,"column":39},"end":{"row":22,"column":40},"action":"insert","lines":["n"]},{"start":{"row":22,"column":40},"end":{"row":22,"column":41},"action":"insert","lines":["g"]}]]},"timestamp":1582506473150}